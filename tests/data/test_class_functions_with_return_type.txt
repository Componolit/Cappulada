with Capdpa.Bar.Baz;
with Capdpa.Bar.Foo.Blub;
with Capdpa.Blah;
with Capdpa.Foo;
with System;

package Capdpa.Bar.Foo.Brabbel
is
   type Class is
   limited record
      Field1 : Capdpa.Bar.Baz.My_Type;
      Field2 : Capdpa.Local_Type;
      Field3 : Capdpa.Bar.Foo.Blub.Some_Type;
   end record
   with Import, Convention => CPP;
   type Class_Address is access Class;
   function Constructor return Class;
   pragma Cpp_Constructor (Constructor, "_ZN3bar3foo7brabbelC1Ev");
   function Do_Something (This : access Class; Param1 : Capdpa.Foo.Bar; Param2 : Capdpa.Foo.Baz) return Capdpa.Blah.Some_Type
   with Import, Convention => CPP, External_Name => "_ZN3bar3foo7brabbel12do_somethingEN3foo3barENS2_3bazE";
end Capdpa.Bar.Foo.Brabbel;
