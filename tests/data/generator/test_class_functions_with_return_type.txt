with Capdpa.Bar.Baz;
with Capdpa.Blah;
with Capdpa.Foo;

package Capdpa.Bar.Foo
   with SPARK_Mode => On
is
   package Brabbel
      with SPARK_Mode => On
   is
      type Class is
      limited record
         Field1 : Capdpa.Bar.Baz.My_Type;
         Field2 : Capdpa.Bar.Foo.Brabbel.Local_Type;
         Field3 : Capdpa.Bar.Foo.Blub.Some_Type;
      end record
      with Import, Convention => CPP;

      type Class_Address is private;

      function Constructor return Class
      with Global => null;
      pragma Cpp_Constructor (Constructor, "_ZN3bar3foo7brabbelC1Ev");

      function Do_Something (This : Class; Param1 : Capdpa.Foo.Bar; Param2 : Capdpa.Foo.Baz) return Capdpa.Blah.Some_Type
      with Global => null, Import, Convention => CPP, External_Name => "_ZN3bar3foo7brabbel12do_somethingEN3foo3barENS2_3bazE";

   private
      pragma SPARK_Mode (Off);

      type Class_Address is access Class;

   end Brabbel;

end Capdpa.Bar.Foo;
